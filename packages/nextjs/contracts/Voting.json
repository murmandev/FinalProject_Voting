{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "details",
          "type": "string"
        }
      ],
      "name": "addProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "archiveExpiredProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposals",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "descriptions",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "detailsList",
          "type": "string[]"
        },
        {
          "internalType": "uint256[]",
          "name": "votesFor",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "votesAgainst",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "createdAt",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "indices",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "authors",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getVoteStatus",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "details",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "archived",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "voteStatus",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd658e2a558e2a3e5589798818f1560b050ba9a82affcbb18a70a69959a976d01",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2724900",
    "logsBloom": "0x
    "blockHash": "0xc7fa1e319bee94b19951283dcff9ea9084b875008b0e8325640d1d6226a16967",
    "transactionHash": "0xd658e2a558e2a3e5589798818f1560b050ba9a82affcbb18a70a69959a976d01",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2724900",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9a4618d20e690f0a2a8a500308498add",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"addProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"archiveExpiredProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"descriptions\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"detailsList\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"votesFor\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"votesAgainst\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"createdAt\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"authors\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVoteStatus\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"archived\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voteStatus\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Voting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract Voting {\\r\\n    struct Proposal {\\r\\n        string description;\\r\\n        string details;\\r\\n        uint256 votesFor;\\r\\n        uint256 votesAgainst;\\r\\n        uint256 createdAt;\\r\\n        bool archived;\\r\\n        address author;\\r\\n    }\\r\\n\\r\\n    Proposal[] public proposals;\\r\\n    mapping(address => mapping(uint256 => uint8)) public voteStatus;\\r\\n\\r\\n    uint256 constant VOTING_DURATION = 3 days;\\r\\n\\r\\n    constructor() {\\r\\n        // \\u0422\\u0435\\u0441\\u0442\\u043e\\u0432\\u0430\\u044f \\u0438\\u043d\\u0438\\u0446\\u0438\\u0430\\u0442\\u0438\\u0432\\u0430\\r\\n        proposals.push(Proposal(\\r\\n            unicode\\\"\\u0422\\u0435\\u0441\\u0442\\u043e\\u0432\\u0430\\u044f \\u0438\\u043d\\u0438\\u0446\\u0438\\u0430\\u0442\\u0438\\u0432\\u0430\\\",\\r\\n            unicode\\\"\\u041e\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u043e\\u0432\\u043e\\u0439 \\u0438\\u043d\\u0438\\u0446\\u0438\\u0430\\u0442\\u0438\\u0432\\u044b (\\u0437\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u0441\\u044f \\u0447\\u0435\\u0440\\u0435\\u0437 3 \\u043c\\u0438\\u043d\\u0443\\u0442\\u044b)\\\",\\r\\n            0,\\r\\n            0,\\r\\n            block.timestamp - VOTING_DURATION + 3 minutes,\\r\\n            false,\\r\\n            msg.sender\\r\\n        ));\\r\\n\\r\\n        // 10 \\u043e\\u0431\\u044b\\u0447\\u043d\\u044b\\u0445 \\u0438\\u043d\\u0438\\u0446\\u0438\\u0430\\u0442\\u0438\\u0432\\r\\n        for (uint256 i = 1; i <= 10; i++) {\\r\\n            proposals.push(Proposal(\\r\\n                string(abi.encodePacked(unicode\\\"\\u0418\\u043d\\u0438\\u0446\\u0438\\u0430\\u0442\\u0438\\u0432\\u0430 #\\\", uint2str(i))),\\r\\n                string(abi.encodePacked(unicode\\\"\\u041e\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u0435 \\u0438\\u043d\\u0438\\u0446\\u0438\\u0430\\u0442\\u0438\\u0432\\u044b #\\\", uint2str(i))),\\r\\n                0,\\r\\n                0,\\r\\n                block.timestamp,\\r\\n                false,\\r\\n                msg.sender\\r\\n            ));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addProposal(string memory description, string memory details) public {\\r\\n        proposals.push(Proposal(description, details, 0, 0, block.timestamp, false, msg.sender));\\r\\n    }\\r\\n\\r\\n    function vote(uint256 index, bool support) public {\\r\\n        require(index < proposals.length, \\\"Invalid index\\\");\\r\\n        Proposal storage p = proposals[index];\\r\\n        require(!p.archived, \\\"Proposal is archived\\\");\\r\\n        require(block.timestamp < p.createdAt + VOTING_DURATION, \\\"Voting period is over\\\");\\r\\n        require(voteStatus[msg.sender][index] == 0, \\\"Already voted\\\");\\r\\n\\r\\n        voteStatus[msg.sender][index] = support ? 1 : 2;\\r\\n        if (support) {\\r\\n            p.votesFor += 1;\\r\\n        } else {\\r\\n            p.votesAgainst += 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProposals() public view returns (\\r\\n        string[] memory descriptions,\\r\\n        string[] memory detailsList,\\r\\n        uint256[] memory votesFor,\\r\\n        uint256[] memory votesAgainst,\\r\\n        uint256[] memory createdAt,\\r\\n        uint256[] memory indices,\\r\\n        address[] memory authors\\r\\n    ) {\\r\\n        uint count = 0;\\r\\n        for (uint i = 0; i < proposals.length; i++) {\\r\\n            if (!proposals[i].archived) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        descriptions = new string[](count);\\r\\n        detailsList = new string[](count);\\r\\n        votesFor = new uint256[](count);\\r\\n        votesAgainst = new uint256[](count);\\r\\n        createdAt = new uint256[](count);\\r\\n        indices = new uint256[](count);\\r\\n        authors = new address[](count);\\r\\n\\r\\n        uint j = 0;\\r\\n        for (uint i = 0; i < proposals.length; i++) {\\r\\n            if (!proposals[i].archived) {\\r\\n                Proposal storage p = proposals[i];\\r\\n                descriptions[j] = p.description;\\r\\n                detailsList[j] = p.details;\\r\\n                votesFor[j] = p.votesFor;\\r\\n                votesAgainst[j] = p.votesAgainst;\\r\\n                createdAt[j] = p.createdAt;\\r\\n                indices[j] = i;\\r\\n                authors[j] = p.author;\\r\\n                j++;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getVoteStatus(address user, uint256 index) public view returns (uint8) {\\r\\n        require(index < proposals.length, \\\"Invalid index\\\");\\r\\n        require(!proposals[index].archived, \\\"Proposal is archived\\\");\\r\\n        return voteStatus[user][index];\\r\\n    }\\r\\n\\r\\n    function archiveExpiredProposals() public {\\r\\n        for (uint i = 0; i < proposals.length; i++) {\\r\\n            if (!proposals[i].archived && block.timestamp >= proposals[i].createdAt + VOTING_DURATION) {\\r\\n                proposals[i].archived = true;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function uint2str(uint256 _i) internal pure returns (string memory str) {\\r\\n        if (_i == 0) return \\\"0\\\";\\r\\n        uint j = _i;\\r\\n        uint len;\\r\\n        while (j != 0) {\\r\\n            len++;\\r\\n            j /= 10;\\r\\n        }\\r\\n        bytes memory bstr = new bytes(len);\\r\\n        uint k = len;\\r\\n        while (_i != 0) {\\r\\n            k = k - 1;\\r\\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\\r\\n            bstr[k] = bytes1(temp);\\r\\n            _i /= 10;\\r\\n        }\\r\\n        return string(bstr);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4e434e6a74d5e57fb36bb1e74199e2da27fbe1cd7945f17fdd51e1e9a2585e4c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060006040518060e00160405280604051806060016040528060258152602001620018f46025913981526020016040518060a00160405280606781526020016200188d60679139815260006020820181905260408201526060016200007a6203f48042620003f1565b620000879060b46200040d565b815260006020808301829052336040909301929092528354600181018555938152208151919260060201908190620000c09082620004c8565b5060208201516001820190620000d79082620004c8565b5060408201516002820155606082015160038201556080820151600482015560a08201516005909101805460c0909301516001600160a01b031661010002610100600160a81b0319921515929092166001600160a81b03199093169290921717905560015b600a8111620002935760006040518060e0016040528062000163846200029a60201b60201c565b604051602001620001759190620005c6565b60408051601f19818403018152919052815260200162000195846200029a565b604051602001620001a7919062000601565b60408051601f1981840301815291815290825260006020838101829052918301819052426060840152608083018190523360a090930192909252835460018101855593825290208151919260060201908190620002059082620004c8565b50602082015160018201906200021c9082620004c8565b5060408201516002820155606082015160038201556080820151600482015560a08201516005909101805460c0909301516001600160a01b031661010002610100600160a81b0319921515929092166001600160a81b031990931692909217179055806200028a8162000645565b9150506200013c565b50620006d0565b606081600003620002c25750506040805180820190915260018152600360fc1b602082015290565b8160005b8115620002f25780620002d98162000645565b9150620002ea9050600a8362000661565b9150620002c6565b6000816001600160401b038111156200030f576200030f62000423565b6040519080825280601f01601f1916602001820160405280156200033a576020820181803683370190505b509050815b8515620003d25762000353600182620003f1565b9050600062000364600a8862000661565b6200037190600a62000684565b6200037d9088620003f1565b6200038a9060306200069e565b90508060f81b838381518110620003a557620003a5620006ba565b60200101906001600160f81b031916908160001a905350620003c9600a8862000661565b9650506200033f565b50949350505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115620004075762000407620003db565b92915050565b80820180821115620004075762000407620003db565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200044e57607f821691505b6020821081036200046f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004c357600081815260208120601f850160051c810160208610156200049e5750805b601f850160051c820191505b81811015620004bf57828155600101620004aa565b5050505b505050565b81516001600160401b03811115620004e457620004e462000423565b620004fc81620004f5845462000439565b8462000475565b602080601f8311600181146200053457600084156200051b5750858301515b600019600386901b1c1916600185901b178555620004bf565b600085815260208120601f198616915b82811015620005655788860151825594840194600190910190840162000544565b5085821015620005845787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000815160005b81811015620005b757602081850181015186830152016200059b565b50600093019283525090919050565b7fd098d0bdd0b8d186d0b8d0b0d182d0b8d0b2d0b020230000000000000000000081526000620005fa601683018462000594565b9392505050565b7fd09ed0bfd0b8d181d0b0d0bdd0b8d0b520d0b8d0bdd0b8d186d0b8d0b0d182d0815266b8d0b2d18b202360c81b60208201526000620005fa602783018462000594565b6000600182016200065a576200065a620003db565b5060010190565b6000826200067f57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417620004075762000407620003db565b60ff8181168382160190811115620004075762000407620003db565b634e487b7160e01b600052603260045260246000fd5b6111ad80620006e06000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636dfba3251161005b5780636dfba325146100e157806375f7b6d014610121578063c9d27afe14610134578063e22465181461014757600080fd5b8063013cf08b1461008257806323d1c95e146100b157806362564c48146100c6575b600080fd5b610095610090366004610c50565b61014f565b6040516100a89796959493929190610caf565b60405180910390f35b6100c46100bf366004610dad565b6102bf565b005b6100ce6103b1565b6040516100a89796959493929190610ea4565b61010f6100ef366004610f6a565b600160209081526000928352604080842090915290825290205460ff1681565b60405160ff90911681526020016100a8565b61010f61012f366004610f6a565b6108bb565b6100c4610142366004610fa2565b61099f565b6100c4610b88565b6000818154811061015f57600080fd5b906000526020600020906006020160009150905080600001805461018290610fd7565b80601f01602080910402602001604051908101604052809291908181526020018280546101ae90610fd7565b80156101fb5780601f106101d0576101008083540402835291602001916101fb565b820191906000526020600020905b8154815290600101906020018083116101de57829003601f168201915b50505050509080600101805461021090610fd7565b80601f016020809104026020016040519081016040528092919081815260200182805461023c90610fd7565b80156102895780601f1061025e57610100808354040283529160200191610289565b820191906000526020600020905b81548152906001019060200180831161026c57829003601f168201915b505050506002830154600384015460048501546005909501549394919390925060ff81169061010090046001600160a01b031687565b6040805160e0810182528381526020810183905260009181018290526060810182905242608082015260a081018290523360c08201528154600181018355918052805190916006027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301908190610336908261105f565b506020820151600182019061034b908261105f565b5060408201516002820155606082015160038201556080820151600482015560a08201516005909101805460c0909301516001600160a01b031661010002610100600160a81b0319921515929092166001600160a81b0319909316929092171790555050565b60608060608060608060606000805b60005481101561041857600081815481106103dd576103dd61111f565b600091825260209091206005600690920201015460ff1661040657816104028161114b565b9250505b806104108161114b565b9150506103c0565b508067ffffffffffffffff81111561043257610432610d0a565b60405190808252806020026020018201604052801561046557816020015b60608152602001906001900390816104505790505b5097508067ffffffffffffffff81111561048157610481610d0a565b6040519080825280602002602001820160405280156104b457816020015b606081526020019060019003908161049f5790505b5096508067ffffffffffffffff8111156104d0576104d0610d0a565b6040519080825280602002602001820160405280156104f9578160200160208202803683370190505b5095508067ffffffffffffffff81111561051557610515610d0a565b60405190808252806020026020018201604052801561053e578160200160208202803683370190505b5094508067ffffffffffffffff81111561055a5761055a610d0a565b604051908082528060200260200182016040528015610583578160200160208202803683370190505b5093508067ffffffffffffffff81111561059f5761059f610d0a565b6040519080825280602002602001820160405280156105c8578160200160208202803683370190505b5092508067ffffffffffffffff8111156105e4576105e4610d0a565b60405190808252806020026020018201604052801561060d578160200160208202803683370190505b5091506000805b6000548110156108af57600081815481106106315761063161111f565b600091825260209091206005600690920201015460ff1661089d5760008082815481106106605761066061111f565b9060005260206000209060060201905080600001805461067f90610fd7565b80601f01602080910402602001604051908101604052809291908181526020018280546106ab90610fd7565b80156106f85780601f106106cd576101008083540402835291602001916106f8565b820191906000526020600020905b8154815290600101906020018083116106db57829003601f168201915b50505050508b848151811061070f5761070f61111f565b602002602001018190525080600101805461072990610fd7565b80601f016020809104026020016040519081016040528092919081815260200182805461075590610fd7565b80156107a25780601f10610777576101008083540402835291602001916107a2565b820191906000526020600020905b81548152906001019060200180831161078557829003601f168201915b50505050508a84815181106107b9576107b961111f565b602002602001018190525080600201548984815181106107db576107db61111f565b60200260200101818152505080600301548884815181106107fe576107fe61111f565b60200260200101818152505080600401548784815181106108215761082161111f565b602002602001018181525050818684815181106108405761084061111f565b6020026020010181815250508060050160019054906101000a90046001600160a01b03168584815181106108765761087661111f565b6001600160a01b0390921660209283029190910190910152826108988161114b565b935050505b806108a78161114b565b915050610614565b50505090919293949596565b6000805482106109025760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064015b60405180910390fd5b600082815481106109155761091561111f565b600091825260209091206005600690920201015460ff16156109705760405162461bcd60e51b8152602060048201526014602482015273141c9bdc1bdcd85b081a5cc8185c98da1a5d995960621b60448201526064016108f9565b506001600160a01b038216600090815260016020908152604080832084845290915290205460ff165b92915050565b60005482106109e05760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016108f9565b60008083815481106109f4576109f461111f565b60009182526020909120600690910201600581015490915060ff1615610a535760405162461bcd60e51b8152602060048201526014602482015273141c9bdc1bdcd85b081a5cc8185c98da1a5d995960621b60448201526064016108f9565b6203f4808160040154610a669190611164565b4210610aac5760405162461bcd60e51b81526020600482015260156024820152742b37ba34b733903832b934b7b21034b99037bb32b960591b60448201526064016108f9565b33600090815260016020908152604080832086845290915290205460ff1615610b075760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b60448201526064016108f9565b81610b13576002610b16565b60015b3360009081526001602090815260408083208784529091529020805460ff191660ff929092169190911790558115610b68576001816002016000828254610b5d9190611164565b90915550610b839050565b6001816003016000828254610b7d9190611164565b90915550505b505050565b60005b600054811015610c4d5760008181548110610ba857610ba861111f565b600091825260209091206005600690920201015460ff16158015610bfe57506203f48060008281548110610bde57610bde61111f565b906000526020600020906006020160040154610bfa9190611164565b4210155b15610c3b57600160008281548110610c1857610c1861111f565b60009182526020909120600690910201600501805460ff19169115159190911790555b80610c458161114b565b915050610b8b565b50565b600060208284031215610c6257600080fd5b5035919050565b6000815180845260005b81811015610c8f57602081850181015186830182015201610c73565b506000602082860101526020601f19601f83011685010191505092915050565b60e081526000610cc260e083018a610c69565b8281036020840152610cd4818a610c69565b6040840198909852505060608101949094526080840192909252151560a08301526001600160a01b031660c09091015292915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d3157600080fd5b813567ffffffffffffffff80821115610d4c57610d4c610d0a565b604051601f8301601f19908116603f01168101908282118183101715610d7457610d74610d0a565b81604052838152866020858801011115610d8d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610dc057600080fd5b823567ffffffffffffffff80821115610dd857600080fd5b610de486838701610d20565b93506020850135915080821115610dfa57600080fd5b50610e0785828601610d20565b9150509250929050565b600082825180855260208086019550808260051b84010181860160005b84811015610e5c57601f19868403018952610e4a838351610c69565b98840198925090830190600101610e2e565b5090979650505050505050565b600081518084526020808501945080840160005b83811015610e9957815187529582019590820190600101610e7d565b509495945050505050565b60e081526000610eb760e083018a610e11565b602083820381850152610eca828b610e11565b91508382036040850152610ede828a610e69565b91508382036060850152610ef28289610e69565b91508382036080850152610f068288610e69565b915083820360a0850152610f1a8287610e69565b84810360c0860152855180825282870193509082019060005b81811015610f585784516001600160a01b031683529383019391830191600101610f33565b50909c9b505050505050505050505050565b60008060408385031215610f7d57600080fd5b82356001600160a01b0381168114610f9457600080fd5b946020939093013593505050565b60008060408385031215610fb557600080fd5b8235915060208301358015158114610fcc57600080fd5b809150509250929050565b600181811c90821680610feb57607f821691505b60208210810361100b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b8357600081815260208120601f850160051c810160208610156110385750805b601f850160051c820191505b8181101561105757828155600101611044565b505050505050565b815167ffffffffffffffff81111561107957611079610d0a565b61108d816110878454610fd7565b84611011565b602080601f8311600181146110c257600084156110aa5750858301515b600019600386901b1c1916600185901b178555611057565b600085815260208120601f198616915b828110156110f1578886015182559484019460019091019084016110d2565b508582101561110f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161115d5761115d611135565b5060010190565b808201808211156109995761099961113556fea2646970667358221220bdfcdc86645ce836c5f611e16e0dc68cab6ca99dea6278100430c571e46124a064736f6c63430008140033d09ed0bfd0b8d181d0b0d0bdd0b8d0b520d182d0b5d181d182d0bed0b2d0bed0b920d0b8d0bdd0b8d186d0b8d0b0d182d0b8d0b2d18b2028d0b7d0b0d0bad0bed0bdd187d0b8d182d181d18f20d187d0b5d180d0b5d0b7203320d0bcd0b8d0bdd183d182d18b29d0a2d0b5d181d182d0bed0b2d0b0d18f20d0b8d0bdd0b8d186d0b8d0b0d182d0b8d0b2d0b0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80636dfba3251161005b5780636dfba325146100e157806375f7b6d014610121578063c9d27afe14610134578063e22465181461014757600080fd5b8063013cf08b1461008257806323d1c95e146100b157806362564c48146100c6575b600080fd5b610095610090366004610c50565b61014f565b6040516100a89796959493929190610caf565b60405180910390f35b6100c46100bf366004610dad565b6102bf565b005b6100ce6103b1565b6040516100a89796959493929190610ea4565b61010f6100ef366004610f6a565b600160209081526000928352604080842090915290825290205460ff1681565b60405160ff90911681526020016100a8565b61010f61012f366004610f6a565b6108bb565b6100c4610142366004610fa2565b61099f565b6100c4610b88565b6000818154811061015f57600080fd5b906000526020600020906006020160009150905080600001805461018290610fd7565b80601f01602080910402602001604051908101604052809291908181526020018280546101ae90610fd7565b80156101fb5780601f106101d0576101008083540402835291602001916101fb565b820191906000526020600020905b8154815290600101906020018083116101de57829003601f168201915b50505050509080600101805461021090610fd7565b80601f016020809104026020016040519081016040528092919081815260200182805461023c90610fd7565b80156102895780601f1061025e57610100808354040283529160200191610289565b820191906000526020600020905b81548152906001019060200180831161026c57829003601f168201915b505050506002830154600384015460048501546005909501549394919390925060ff81169061010090046001600160a01b031687565b6040805160e0810182528381526020810183905260009181018290526060810182905242608082015260a081018290523360c08201528154600181018355918052805190916006027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301908190610336908261105f565b506020820151600182019061034b908261105f565b5060408201516002820155606082015160038201556080820151600482015560a08201516005909101805460c0909301516001600160a01b031661010002610100600160a81b0319921515929092166001600160a81b0319909316929092171790555050565b60608060608060608060606000805b60005481101561041857600081815481106103dd576103dd61111f565b600091825260209091206005600690920201015460ff1661040657816104028161114b565b9250505b806104108161114b565b9150506103c0565b508067ffffffffffffffff81111561043257610432610d0a565b60405190808252806020026020018201604052801561046557816020015b60608152602001906001900390816104505790505b5097508067ffffffffffffffff81111561048157610481610d0a565b6040519080825280602002602001820160405280156104b457816020015b606081526020019060019003908161049f5790505b5096508067ffffffffffffffff8111156104d0576104d0610d0a565b6040519080825280602002602001820160405280156104f9578160200160208202803683370190505b5095508067ffffffffffffffff81111561051557610515610d0a565b60405190808252806020026020018201604052801561053e578160200160208202803683370190505b5094508067ffffffffffffffff81111561055a5761055a610d0a565b604051908082528060200260200182016040528015610583578160200160208202803683370190505b5093508067ffffffffffffffff81111561059f5761059f610d0a565b6040519080825280602002602001820160405280156105c8578160200160208202803683370190505b5092508067ffffffffffffffff8111156105e4576105e4610d0a565b60405190808252806020026020018201604052801561060d578160200160208202803683370190505b5091506000805b6000548110156108af57600081815481106106315761063161111f565b600091825260209091206005600690920201015460ff1661089d5760008082815481106106605761066061111f565b9060005260206000209060060201905080600001805461067f90610fd7565b80601f01602080910402602001604051908101604052809291908181526020018280546106ab90610fd7565b80156106f85780601f106106cd576101008083540402835291602001916106f8565b820191906000526020600020905b8154815290600101906020018083116106db57829003601f168201915b50505050508b848151811061070f5761070f61111f565b602002602001018190525080600101805461072990610fd7565b80601f016020809104026020016040519081016040528092919081815260200182805461075590610fd7565b80156107a25780601f10610777576101008083540402835291602001916107a2565b820191906000526020600020905b81548152906001019060200180831161078557829003601f168201915b50505050508a84815181106107b9576107b961111f565b602002602001018190525080600201548984815181106107db576107db61111f565b60200260200101818152505080600301548884815181106107fe576107fe61111f565b60200260200101818152505080600401548784815181106108215761082161111f565b602002602001018181525050818684815181106108405761084061111f565b6020026020010181815250508060050160019054906101000a90046001600160a01b03168584815181106108765761087661111f565b6001600160a01b0390921660209283029190910190910152826108988161114b565b935050505b806108a78161114b565b915050610614565b50505090919293949596565b6000805482106109025760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064015b60405180910390fd5b600082815481106109155761091561111f565b600091825260209091206005600690920201015460ff16156109705760405162461bcd60e51b8152602060048201526014602482015273141c9bdc1bdcd85b081a5cc8185c98da1a5d995960621b60448201526064016108f9565b506001600160a01b038216600090815260016020908152604080832084845290915290205460ff165b92915050565b60005482106109e05760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016108f9565b60008083815481106109f4576109f461111f565b60009182526020909120600690910201600581015490915060ff1615610a535760405162461bcd60e51b8152602060048201526014602482015273141c9bdc1bdcd85b081a5cc8185c98da1a5d995960621b60448201526064016108f9565b6203f4808160040154610a669190611164565b4210610aac5760405162461bcd60e51b81526020600482015260156024820152742b37ba34b733903832b934b7b21034b99037bb32b960591b60448201526064016108f9565b33600090815260016020908152604080832086845290915290205460ff1615610b075760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b60448201526064016108f9565b81610b13576002610b16565b60015b3360009081526001602090815260408083208784529091529020805460ff191660ff929092169190911790558115610b68576001816002016000828254610b5d9190611164565b90915550610b839050565b6001816003016000828254610b7d9190611164565b90915550505b505050565b60005b600054811015610c4d5760008181548110610ba857610ba861111f565b600091825260209091206005600690920201015460ff16158015610bfe57506203f48060008281548110610bde57610bde61111f565b906000526020600020906006020160040154610bfa9190611164565b4210155b15610c3b57600160008281548110610c1857610c1861111f565b60009182526020909120600690910201600501805460ff19169115159190911790555b80610c458161114b565b915050610b8b565b50565b600060208284031215610c6257600080fd5b5035919050565b6000815180845260005b81811015610c8f57602081850181015186830182015201610c73565b506000602082860101526020601f19601f83011685010191505092915050565b60e081526000610cc260e083018a610c69565b8281036020840152610cd4818a610c69565b6040840198909852505060608101949094526080840192909252151560a08301526001600160a01b031660c09091015292915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d3157600080fd5b813567ffffffffffffffff80821115610d4c57610d4c610d0a565b604051601f8301601f19908116603f01168101908282118183101715610d7457610d74610d0a565b81604052838152866020858801011115610d8d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610dc057600080fd5b823567ffffffffffffffff80821115610dd857600080fd5b610de486838701610d20565b93506020850135915080821115610dfa57600080fd5b50610e0785828601610d20565b9150509250929050565b600082825180855260208086019550808260051b84010181860160005b84811015610e5c57601f19868403018952610e4a838351610c69565b98840198925090830190600101610e2e565b5090979650505050505050565b600081518084526020808501945080840160005b83811015610e9957815187529582019590820190600101610e7d565b509495945050505050565b60e081526000610eb760e083018a610e11565b602083820381850152610eca828b610e11565b91508382036040850152610ede828a610e69565b91508382036060850152610ef28289610e69565b91508382036080850152610f068288610e69565b915083820360a0850152610f1a8287610e69565b84810360c0860152855180825282870193509082019060005b81811015610f585784516001600160a01b031683529383019391830191600101610f33565b50909c9b505050505050505050505050565b60008060408385031215610f7d57600080fd5b82356001600160a01b0381168114610f9457600080fd5b946020939093013593505050565b60008060408385031215610fb557600080fd5b8235915060208301358015158114610fcc57600080fd5b809150509250929050565b600181811c90821680610feb57607f821691505b60208210810361100b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b8357600081815260208120601f850160051c810160208610156110385750805b601f850160051c820191505b8181101561105757828155600101611044565b505050505050565b815167ffffffffffffffff81111561107957611079610d0a565b61108d816110878454610fd7565b84611011565b602080601f8311600181146110c257600084156110aa5750858301515b600019600386901b1c1916600185901b178555611057565b600085815260208120601f198616915b828110156110f1578886015182559484019460019091019084016110d2565b508582101561110f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161115d5761115d611135565b5060010190565b808201808211156109995761099961113556fea2646970667358221220bdfcdc86645ce836c5f611e16e0dc68cab6ca99dea6278100430c571e46124a064736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20,
        "contract": "contracts/Voting.sol:Voting",
        "label": "proposals",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Proposal)16_storage)dyn_storage"
      },
      {
        "astId": 26,
        "contract": "contracts/Voting.sol:Voting",
        "label": "voteStatus",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint8))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Proposal)16_storage)dyn_storage": {
        "base": "t_struct(Proposal)16_storage",
        "encoding": "dynamic_array",
        "label": "struct Voting.Proposal[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint8))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint8))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint8)"
      },
      "t_mapping(t_uint256,t_uint8)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint8)",
        "numberOfBytes": "32",
        "value": "t_uint8"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)16_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Proposal",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Voting.sol:Voting",
            "label": "description",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/Voting.sol:Voting",
            "label": "details",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/Voting.sol:Voting",
            "label": "votesFor",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 9,
            "contract": "contracts/Voting.sol:Voting",
            "label": "votesAgainst",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 11,
            "contract": "contracts/Voting.sol:Voting",
            "label": "createdAt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 13,
            "contract": "contracts/Voting.sol:Voting",
            "label": "archived",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 15,
            "contract": "contracts/Voting.sol:Voting",
            "label": "author",
            "offset": 1,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}